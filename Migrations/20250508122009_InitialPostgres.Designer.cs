// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_receitas.Data;

#nullable disable

namespace api_receitas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508122009_InitialPostgres")]
    partial class InitialPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IngredienteModelReceitaModel", b =>
                {
                    b.Property<Guid>("IngredientesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceitasId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientesId", "ReceitasId");

                    b.HasIndex("ReceitasId");

                    b.ToTable("IngredienteModelReceitaModel");
                });

            modelBuilder.Entity("api_receitas.Models.IngredienteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Unidade")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("api_receitas.Models.ReceitaIngredienteModel", b =>
                {
                    b.Property<Guid>("ReceitaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IngredienteId")
                        .HasColumnType("uuid");

                    b.Property<string>("Quantidade")
                        .HasColumnType("text");

                    b.HasKey("ReceitaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("ReceitaIngrediente");
                });

            modelBuilder.Entity("api_receitas.Models.ReceitaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("boolean");

                    b.Property<string>("ModoPreparo")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Porcoes")
                        .HasColumnType("integer");

                    b.Property<int>("TempoPreparo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("IngredienteModelReceitaModel", b =>
                {
                    b.HasOne("api_receitas.Models.IngredienteModel", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_receitas.Models.ReceitaModel", null)
                        .WithMany()
                        .HasForeignKey("ReceitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_receitas.Models.ReceitaIngredienteModel", b =>
                {
                    b.HasOne("api_receitas.Models.IngredienteModel", "Ingrediente")
                        .WithMany("ReceitaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_receitas.Models.ReceitaModel", "Receita")
                        .WithMany("ReceitaIngredientes")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("api_receitas.Models.IngredienteModel", b =>
                {
                    b.Navigation("ReceitaIngredientes");
                });

            modelBuilder.Entity("api_receitas.Models.ReceitaModel", b =>
                {
                    b.Navigation("ReceitaIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
